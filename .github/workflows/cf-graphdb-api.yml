name: Cloudflare GraphDB API - Test & Build

on:
  push:
    branches: [main, development]
    paths:
      - 'cf-graphdb-api/**'
      - '!**.md'
  pull_request:
    branches: [main, development]
    paths:
      - 'cf-graphdb-api/**'
      - '!**.md'
  workflow_dispatch:  # Allow manual triggering

defaults:
  run:
    working-directory: cf-graphdb-api

jobs:
  test:
    name: Stage cf-graphdb-api
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: 'cf-graphdb-api/package-lock.json'
      - name: Stage CI
        run: npm run ci:stage
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: cf-graphdb-api/coverage/
          retention-days: 7
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: cf-graphdb-api
          args: >
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.sources=src
            -Dsonar.tests=test
            -Dsonar.test.inclusions=**/*.test.ts
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverage.exclusions=**/*.test.ts
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_BASE_DIR: .
      - name: Deploy stage
        run: npm run deploy:stage
        env:
          CLOUDFLARE_API_TOKEN : ${{ secrets.CF_GRAPHDB_API_STAGE_DEPLOY_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID : ${{ secrets.CF_STAGE_ACC_ID }}
