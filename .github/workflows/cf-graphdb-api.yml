name: Cloudflare Worker GraphDB API - Test & Build

on:
  push:
    branches: [main, development]
    paths:
      - 'cf-graphdb-api/**'
      - '!**.md'
  pull_request:
    branches: [main, development]
    paths:
      - 'cf-graphdb-api/**'
      - '!**.md'
  workflow_dispatch:  # Allow manual triggering

defaults:
  run:
    working-directory: cf-graphdb-api

jobs:
  test:
    name: Stage cf-graphdb-api
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: 'cf-graphdb-api/package-lock.json'
      - name: ðŸ§ª Run Vitest with temp .env
        shell: bash
        run: |
          set -e          # fail on first error in main command block
          trap 'rm -f .dev.vars.stage' EXIT  # always delete .dev.vars.stage on exit
          echo "JWT_SECRET=${{ secrets.ENV_JWT_SECRET }}" > .dev.vars.stage
          npm run ci:stage
        env:
          NODE_ENV: stage
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: cf-graphdb-api/coverage/
          retention-days: 7
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: cf-graphdb-api
          args: >
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.sources=src
            -Dsonar.tests=test
            -Dsonar.test.inclusions=**/*.test.ts
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverage.exclusions=**/*.test.ts
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_BASE_DIR: .
      - name: Deploy stage
        run: npm run deploy:stage
        env:
          CLOUDFLARE_API_TOKEN : ${{ secrets.CF_GRAPHDB_API_STAGE_DEPLOY_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID : ${{ secrets.CF_STAGE_ACC_ID }}
  performance:
    name: Run Performance Tests
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: 'performance/api/requirements.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: performance/api

      - name: Run load tests
        run: |
          echo "Running main load test..."
          python load.py
          echo "Running specialized traversal test..."
          python traversal-test.py
        working-directory: performance/api
        env:
          CF_WORKER_URL: ${{ secrets.CF_WORKER_URL }}
          ENV_JWT_SECRET: ${{ secrets.ENV_JWT_SECRET }}

#      - name: Upload test results
#        uses: actions/upload-artifact@v4
#        with:
#          name: performance-test-results
#          path: performance/api/*.log
#          retention-days: 7
#          if-no-files-found: ignore
